classDiagram
    class index {
        +main()
    }

    class UserController {
        -userService: IUserService
        -connection: IConnection
        +UserController(userService, connection)
        +authenticateUser(email, password): boolean
    }

    class IUserService {
        <<interface>>
        +verifyPassword(inputPassword, storedPassword): boolean
    }

    class UserService {
        +verifyPassword(inputPassword, storedPassword): boolean
    }

    class IConnection {
        <<interface>>
        +query(sql, params): Promise~any~
        +close(): Promise~void~
    }

    class Connection {
        -isConnected: boolean
        -config: any
        +Connection(config?)
        -connect()
        +query(sql, params): Promise~any~
        +close(): Promise~void~
    }

    %% Dependencies - Better Practice: Dependency Injection
    index --> UserService : creates
    index --> UserController : creates with dependencies
    index --> Connection : creates
    
    %% Interface Implementation
    UserService ..<| IUserService : implements
    Connection ..<| IConnection : implements

    %% Controller consumes dependencies
    UserController --> IUserService : depends on
    UserController --> IConnection : depends on
    
